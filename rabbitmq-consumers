#!/bin/sh
#
# Plugin to monitor the number of consumers to RabbitMQ
#
# Usage: Link or copy into /etc/munin/node.d/
#
# Parameters
#     env.consumer_warn <warning consumers>
#     env.consumer_crit <critical consumers>
#
# Magic markers (optional - only used by munin-config and some
# installation scripts):
#
#%# family=auto
#%# capabilities=autoconf

# If run with the "autoconf"-parameter, give our opinion on wether we
# should be run on this system or not. This is optinal, and only used by
# munin-config. In the case of this plugin, we should most probably
# always be included.

if [ "$1" = "autoconf" ]; then
  echo yes
  exit 0
fi

# If run with the "config"-parameter, give out information on how the
# graphs should look.

if [ "$1" = "config" ]; then
        CONN_WARN=${consumer_warn:-500}
        CONN_CRIT=${consumer_crit:-1000}

  # The host name this plugin is for. (Can be overridden to have
  # one machine answer for several)

  # The title of the graph
  echo 'graph_title RabbitMQ consumers'
  # Arguments to "rrdtool graph". In this case, tell it that the
  # lower limit of the graph is '0', and that 1k=1000 (not 1024)
  echo 'graph_args --base 1000 -l 0'
  # The Y-axis label
  echo 'graph_vlabel consumers'
  # We want Cur/Min/Avg/Max unscaled (i.e. 0.42 load instead of
  # 420 milliload)
  #echo 'graph_scale no'
  echo 'graph_category RabbitMQ'

  echo "consumers.label Consumers"
  echo "consumers.warning $CONN_WARN"
  echo "consumers.critical $CONN_CRIT"
  echo "consumers.info Number of active consumers"

  echo 'graph_info Shows the number of consumers to RabbitMQ'
  # Last, if run with the "config"-parameter, quit here (don't
  # display any data)
  exit 0
fi

# If not run with any parameters at all (or only unknown ones), do the
# real work - i.e. display the data. Almost always this will be
# "value" subfield for every data field.

echo "consumers.value $(rabbitmqctl list_consumers | grep -v "^Listing" | grep -v "done.$" | wc -l)"
